---
swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "Smart Response App"
  contact: {}
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:9000"
basePath: "/api/v1"
schemes:
- http
securityDefinitions:
  api_key:
    type: apiKey
    name: api_key
    in: header
paths:
  /auth:
    post:
      summary: "Request Auth Token"
      tags:
      - auth
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/AuthRequest"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/AuthKey"
  /last_ticket:
    get:
      summary: "Get My Requests"
      security:
      - api_key: []
      tags:
      - ticket
      responses:
        200:
          description: "Ticket Id or Empty"
          schema:
            $ref: "#/definitions/ApiTicket"
        204:
          description: "No Last Ticket exists"
  /tickets:
    post:
      summary: "Create new SupportRequest"
      security:
      - api_key: []
      tags:
      - ticket
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ApiTicketInfo"
      responses:
        200:
          description: "Returns the saved Ticket"
          schema:
            $ref: "#/definitions/ApiTicket"
  /tickets/{ticketId}:
    put:
      summary: "Updates a Ticket"
      security:
      - api_key: []
      tags:
      - ticket
      consumes:
      - "application/json"
      parameters:
      - name: "ticketId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/ApiTicketInfo"
      responses:
        204:
          description: "Status 204"
  /tickets/{ticketId}/media:
    post:
      summary: "Add Media"
      security:
      - api_key: []
      tags:
      - ticket
      consumes:
      - "multipart/form-data"
      parameters:
      - name: "ticketId"
        in: "path"
        required: true
        type: "string"
      - name: "media"
        in: "formData"
        required: true
        type: "file"
      responses:
        204:
          description: "Status 204"
  /me:
    get:
      summary: "Get My Information"
      security:
      - api_key: []
      tags:
      - user
      description: "returns the information for the current user"
      produces:
      - "application/json"
      responses:
        200:
          description: "Status 200"
          schema:
            $ref: "#/definitions/UserData"
    put:
      summary: "Change my Information"
      security:
      - api_key: []
      tags:
      - user
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/UserData"
      responses:
        204:
          description: "Status 204"
        400:
          description: "Server geupdated, Client nicht z.B., Übertragungsfehler??\
            \ Bug durch Emojis oder ähnlichem?\n\nRohdaten logen, info an  Recordbay\
            \ / Admin"
definitions:
  ApiTicketInfo:
    type: "object"
    required:
    - "closed"
    properties:
      timeslot:
        type: "string"
        format: "date-time"
        description: "time for callback"
      telephone:
        type: "string"
      closed:
        type: "boolean"
        default: false
  ApiTicket:
    type: "object"
    required:
    - "closed"
    - "key"
    - "media"
    properties:
      timeslot:
        type: "string"
        format: "date-time"
        description: "time for callback"
      telephone:
        type: "string"
      closed:
        type: "boolean"
        default: false
      key:
        type: "string"
      media:
        type: "array"
        items:
          type: "string"
  UserData:
    type: "object"
    required:
    - "email"
    - "telephone"
    properties:
      telephone:
        type: "array"
        items:
          $ref: "#/definitions/TelephoneNumber"
      firstname:
        type: "string"
      lastname:
        type: "string"
      email:
        type: "string"
  AuthRequest:
    type: "object"
    required:
    - "password"
    - "userkey"
    properties:
      userkey:
        type: "string"
      password:
        type: "string"
  AuthKey:
    type: "object"
    required:
    - "key"
    properties:
      key:
        type: "string"
  TelephoneNumber:
    type: "object"
    required:
      - "number"
      - "assistant"
    properties:
      number:
        type: "string"
      assistant:
        type: "boolean"
